name: Deploy Release

on:
  workflow_dispatch:
    inputs:
      releaseType:
        description: 'Type of Release'
        required: true
        default: 'prerelease'
        type: choice
        options:
          - prerelease
          - production
      BaseVersion:
        description: 'Base Build Version'
        required: true
        default: '1.0'

jobs:
  build-and-analyze:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup MSBuild Path
      uses: microsoft/setup-msbuild@v1.1

    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # Important to fetch all tags and history

    - name: Fetch all tags
      run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

    - name: List tags
      run: git tag

    - name: Calculate version
      id: versioning
      run: |
         $BaseVersion = "${{ github.event.inputs.BaseVersion }}"
         $LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
         $PATCH_VERSION=$LATEST_TAG.Split('.')[2]
         if($LATEST_TAG.StartsWith($BaseVersion)){$NEW_PATCH_VERSION=[int]$PATCH_VERSION + 1} else {$NEW_PATCH_VERSION=1}
         $NEW_TAG="{0}.{1}" -F $BaseVersion,$NEW_PATCH_VERSION
         echo "CALCULATED_VERSION=$NEW_TAG" | Out-File -FilePath $env:GITHUB_ENV -Append
         echo "::set-output name=version::$NEW_TAG"

    - name: Update project file with version
      run: |
        $version = "${{ steps.versioning.outputs.version }}"
        $csprojPath = ".\\Mihelcic.Net.Visio.Diagrammer\\Mihelcic.Net.Visio.Diagrammer.csproj"
        # Load the project file as XML
        [xml]$csproj = Get-Content $csprojPath
        # Update the version elements
        $csproj.Project.PropertyGroup[0].ApplicationVersion = $version
        # Save the changes back to the project file
        $csproj.Save($csprojPath)
        
    - name: Build the project
      run: msbuild ADTD.Net.sln /p:Configuration=Release /p:Platform="Any CPU" /p:OutputPath=./build

    - name: Display Current Directory
      run: Get-Location
      
    - name: Zip the build
      run: 7z a ADTD.zip ./Mihelcic.Net.Visio.Diagrammer/build/*

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: Compiled-Application
        path: ./ADTD.zip

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.versioning.outputs.version }}
        release_name: Release ${{ steps.versioning.outputs.version }}
        draft: false
        prerelease: ${{ github.event.inputs.releaseType == 'prerelease' }}

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ADTD.zip
        asset_name: ADTD.zip
        asset_content_type: application/zip
